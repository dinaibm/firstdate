repositories {
    maven {
        url "http://repo1.maven.org/maven2"
    }
   
}


 
buildscript {
    repositories {
   mavenCentral()
         
    }
 
    dependencies {
            classpath("net.serenity-bdd:serenity-gradle-plugin:1.1.42")
    }
}
 
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
sourceCompatibility = 1.7
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"
 
eclipseJdt.doLast {
    File f = file('.settings/org.eclipse.core.resources.prefs')
    f.write('eclipse.preferences.version=1\n')
    f.append('encoding/<project>=UTF-8')
                                }
 
dependencies {
   testCompile 'net.serenity-bdd:serenity-core:1.2.1-rc.6'
  //  testCompile 'net.serenity-bdd:serenity-ant-task:1.2.1-rc.6'
    testCompile 'net.serenity-bdd:serenity-junit:1.2.1-rc.6' 
    testCompile 'net.serenity-bdd:serenity-cucumber:1.1.13'
    testCompile 'net.serenity-bdd:serenity-screenplay:1.2.1-rc.5'
 //   testCompile "net.serenity-bdd:serenity-rest-assured:1.2.2"
     testCompile "net.serenity-bdd:serenity-rest-assured:1.1.42"
    testCompile "org.codehaus.groovy:groovy-all:2.4.7"
    testCompile('org.assertj:assertj-core:1.7.0')
    compile "org.apache.poi:poi:3.12"
    compile "org.apache.poi:poi-ooxml:3.12"
    compile "org.apache.poi:poi-ooxml-schemas:3.12"
    compile "dom4j:dom4j:1.6"
    compile "org.apache.xmlbeans:xmlbeans:2.3.0"
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.json:json:20160212'
    compile 'com.fasterxml.jackson.core:jackson-core:2.2.2'
       compile 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
       compile 'com.fasterxml.jackson.core:jackson-annotations:2.2.2'
       testCompile 'junit:junit:4.12'
       //compile 'org.seleniumhq.selenium:selenium-server-standalone:2.53.0'
       //compile 'org.seleniumhq.selenium:selenium-server-standalone:2.48.2'
       compile 'com.mashape.unirest:unirest-java:1.4.9'
       
       
}
       
 
task runAParallelSuite(type: Test) {
    def forks =5
    exclude ('**/Library.java')
    println "The Maximum parallel is $forks"
    maxParallelForks = forks
    include '**/**AcceptanceTests.class'
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}
task runOnSeleniumGrid(type: Test) {
       //Selenium Grid
       // systemProperty 'webdriver.driver', System.getProperty('webdriver.driver', 'remote')
       //systemProperty 'webdriver.remote.url', System.getProperty('webdriver.remote.url', 'http://LRW070155.proddfs.pf.discoverfinancial.com:4444/wd/hub')
       //systemProperty 'webdriver.remote.driver', System.getProperty('webdriver.remote.driver', 'iexplorer')
}
task runTest(type: Test) {
     exclude ('**/Library.java')
     include '**/ExistingUserAppFlowRunner.class'
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
}
 
gradle.startParameter.continueOnFailure = true  
